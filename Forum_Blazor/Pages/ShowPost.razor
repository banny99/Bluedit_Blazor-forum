@page "/posts/{Id:int}"
@using Entities.Models
@using Contracts.Services
@using Forum_Blazor.Authentication

@inject IPostService _postService
@inject ICommentService _commentService
@inject IAuthService _authService
@inject NavigationManager _navMgr


<PageTitle>Post</PageTitle>


<div class="box">
    
    @if (!string.IsNullOrEmpty(_errorLabel))
    {
        <label>@_errorLabel</label>
    }
    
    @if (_shownPost == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <h3>
            Header: @_shownPost.Header
        </h3>
        <h5>
            Author: @_shownPost.Author.UserName
        </h5>
        
        <p>
            @_shownPost.Body
        </p>
        
        <AuthorizeView>
            <NotAuthorized>
                <p>Log in first to comment.</p>
            </NotAuthorized>
            <Authorized>
                <div class="form-outline">
                    <input type="text" id="form16" class="form-control" data-mdb-showcounter="true" maxlength="64" @bind="_commentTxt"/>
                    <label class="form-label" for="form16">Comment ...</label>
                    <button type="button" class="btn btn-primary btn-rounded" @onclick="Comment">submit</button>
                </div>
            </Authorized>
        </AuthorizeView>

        
        <br/>
        if (_comments==null)
        {
            <p>Loading...</p>
        }
        else if (!_comments.Any())
        {
            <div class="card">
                <div class="card-header">
                    Comments
                </div>
                <div class="card-body">
                    <em>No comments exist...</em>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-header">
                    Comments
                </div>
                <div class="card-body">
                    @foreach (var comment in _comments)
                    {
                        <br/>
                        <div class="card">
                            <div class="card-header">@comment.WrittenBy.UserName</div>
                            <div class="card-body">
                                <blockquote class="blockquote mb-0">
                                    <p>@comment.Text</p>
                                    <footer class="blockquote-footer">(timestamp)?</footer>
                                </blockquote>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
    
</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private Post? _shownPost;
    private ICollection<Comment>? _comments;
    private string _errorLabel = String.Empty;

    private Comment _comment = null!;
    private string _commentTxt = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _shownPost = await _postService.GetById(Id);
            _comments = await _commentService.GetCommentsByPostId(_shownPost.Id);
        }
        catch (Exception e)
        {
            _errorLabel = e.Message;
        }
    }

    private async void Comment()
    {
        if ( string.IsNullOrEmpty(_commentTxt))
        {
            _errorLabel = "invalid comment";
        }
        else
        {
            _comment = new Comment(0,_authService.GetLoggedUser()!, _shownPost!.Id, _commentTxt);
            _commentTxt = "";
            await _commentService.AddComment(_comment);
            
            _comments!.Add(_comment);
            _navMgr.NavigateTo($"/posts/{_shownPost.Id}");
            
            //forcedLoad works but sets the loggedUser to null ???
            // _navMgr.NavigateTo($"/posts/{_shownPost.Id}", forceLoad:true);
        }
        
    }

}