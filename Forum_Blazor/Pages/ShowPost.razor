@page "/posts/{Id:int}"
@using Entities.Models
@using Contracts.Services
@using Forum_Blazor.Authentication

@inject IPostService _postService
@inject IAuthService _authService


<PageTitle>Post</PageTitle>

<div class="box">
    
    @if (!string.IsNullOrEmpty(_errorLabel))
    {
        <label>@_errorLabel</label>
    }
    
    @if (_shownPost == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <h3>
            Header: @_shownPost.Header
        </h3>
        <h5>
            Author: @_shownPost.Author.UserName
        </h5>
        
        <p>
            @_shownPost.Body
        </p>
        
        <textarea @bind="commentTxt">...</textarea>
        <button @onclick="Comment">submit</button>
        
        <br/>
        if (!_shownPost.Comments.Any())
        {
            <div class="card">
                <div class="card-header">
                    Comments
                </div>
                <div class="card-body">
                    <em>No comments exist...</em>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-header">
                    Comments
                </div>
                <div class="card-body">
                    @foreach (var comment in _shownPost.Comments)
                    {
                        <br/>
                        <div class="card">
                            @if (comment.WrittenBy == null){
                                <div class="card-header">Anonym</div>
                            }
                            else{
                                <div class="card-header">@comment.WrittenBy.UserName</div>
                            }
    
                            <div class="card-body">
                                <blockquote class="blockquote mb-0">
                                    <p>@comment.Text</p>
                                    <footer class="blockquote-footer">(timestamp)?</footer>
                                </blockquote>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
    
</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private Post? _shownPost;
    private string _errorLabel = String.Empty;

    private Comment _comment = null!;
    private string commentTxt = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _shownPost = await _postService.GetById(Id);
        }
        catch (Exception e)
        {
            _errorLabel = e.Message;
        }
        
    }

    private void Comment()
    {
        _comment = new Comment();
        
        if ( string.IsNullOrEmpty(commentTxt))
        {
            _errorLabel = "invalid comment";
        }
        else
        {
            _comment.Text = commentTxt;
            _comment.WrittenBy = _authService.GetLoggedUser();
            
            //if writtenBy == null:
            // _comment.WrittenBy ??= new User("anonym");
            
            _postService.AddComment(_shownPost!, _comment);
        }
        
    }

}