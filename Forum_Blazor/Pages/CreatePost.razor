@page "/CreatePost"
@using Microsoft.AspNetCore.Components
@using Entities.Models
@using Authentication
@using Contracts.Services
@using UIElements

@inject IPostService _postService
@inject IAuthService _authService
@inject NavigationManager _navMgr


<div class="box">
    <h3>CreatePost</h3>
    
    <EditForm Model="@_newPost" OnValidSubmit="@CreateNewPost">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
           
            <div class="form-group field">
                <span>
                    <label>Header:</label>
                </span>
                <span>
                    <InputText @bind-Value="_newPost.Header"/>
                </span>
            </div>
            <div class="form-group field">
                <span>
                    <label>Body:</label>
                </span>
                <span>
                    <InputTextArea rows="4" @bind-Value="_newPost.Body"/>
                </span>
            </div>
            <p class="actions">
                <button class="acceptbtn" type="submit">Create</button>
            </p>
        </EditForm>
    
    
    @if(!string.IsNullOrEmpty(_errorLabel))
    {
        <label>@_errorLabel</label>
    }
    
    @if (_showModal)
    {
        <Modal>
            <p>Do you really wish to add a new Post?</p>
            <button @onclick="@Submit">Create</button>
            <button @onclick="@Edit">Edit</button>
            <button @onclick="@Cancel">Cancel</button>
        </Modal>
    }
    
    
</div>

@code {
    
    private Post _newPost = new Post();
    private string _errorLabel = String.Empty;
    
    private bool _showModal;
    
    private async Task CreateNewPost()
    {
        _errorLabel = "";
        try
        {
            _showModal = true;
        }
        catch (Exception e)
        {
            _errorLabel = e.Message;
        }
    }
    

    private async void Submit()
    {
        _newPost.Author = _authService.GetLoggedUser();
        await _postService.AddAsync(_newPost);
        _newPost = new Post();
        _showModal = false;
        _navMgr.NavigateTo("/Posts");
    }

    private void Edit()
    {
        _showModal = false;
    }

    private void Cancel()
    {
        _newPost = new Post();
        _showModal = false;
        _navMgr.NavigateTo("/Posts");
    }

}