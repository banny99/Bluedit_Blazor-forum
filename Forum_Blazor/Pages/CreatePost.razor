@page "/CreatePost"
@using Microsoft.AspNetCore.Components
@using Entities.Models
@using Authentication
@using Contracts.Services
@using UIElements

@inject IPostService _postService
@inject IAuthService _authService
@inject NavigationManager _navMgr

<div class="box">
    <h3>Create Post</h3>
    
    <EditForm Model="@_newPost" OnValidSubmit="@CreateNewPost">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        @if(!string.IsNullOrEmpty(_errorLabel))
        {
            <label>@_errorLabel</label>
        }
        
        <div class="form-group field">
            <span>
                <label>Header:</label>
            </span>
            <span>
                <InputText @bind-Value="_newPost.Header"/>
            </span>
        </div>
        <div class="form-group field">
            <span>
                <InputTextArea style="width: 90%" rows="5" @bind-Value="_newPost.Body"/>
            </span>
        </div>
        
        <p class="actions">
            <button type="submit" class="btn btn-primary btn-rounded">create</button>
        </p>
    </EditForm>
    

    @if (_showModal)
    {
        <Modal>
            <p>Do you really wish to add a new Post?</p>
            <button @onclick="Submit" class="btn btn-success btn-rounded">submit</button>
            <button @onclick="Edit" class="btn btn-info btn-rounded">edit</button>
            <button @onclick="Cancel" class="btn btn-warning btn-rounded">cancel</button>
        </Modal>
    }
    
    
</div>

@code {
    
    private Post _newPost = new Post();
    private string _errorLabel = String.Empty;
    
    private bool _showModal;
    
    private void CreateNewPost()
    {
        _errorLabel = "";
        try
        {
            _showModal = true;
        }
        catch (Exception e)
        {
            _errorLabel = e.Message;
        }
    }
    

    private async void Submit()
    {
        _newPost.Author = _authService.GetLoggedUser()!;
        _newPost.Comments = new List<Comment>();
        await _postService.AddAsync(_newPost);
        _newPost = new Post();
        _showModal = false;
        _navMgr.NavigateTo("/Login");
    }

    private void Edit()
    {
        _showModal = false;
    }

    private void Cancel()
    {
        _newPost = new Post();
        _showModal = false;
        _navMgr.NavigateTo("/Login");
    }

}